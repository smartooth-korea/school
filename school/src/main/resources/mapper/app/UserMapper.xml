<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.smartooth.app.mapper.UserMapper">


	<!-- 일반 회원 아이디 중복 체크 -->
    <select id="duplicateChkId" resultType="Integer" parameterType="String">
        SELECT COUNT(*)
		  FROM ST_USER
	    WHERE 1=1
		AND USER_ID = #{userId}
    </select>



	<!-- 회원 등록 (회원가입) -->
    <insert id="insertUserInfo" parameterType="co.smartooth.app.vo.UserVO">
    	INSERT INTO ST_USER
    	(
    		USER_NO
    		,USER_ID
    		,USER_PWD
    		,USER_NAME
    		,USER_EMAIL
    		,USER_TYPE
    		,USER_BIRTHDAY
    		,USER_COUNTRY
    		,USER_STATE
    		,USER_ADDRESS
    		,USER_TEL_NO
    		,USER_SEX
    		,USER_RGST_DT
    		,PUSH_TOKEN
    		,USER_DELETE_YN
    		,USER_DELETE_DT
    		,LOGIN_DT
    		,LOGIN_CK
    	)
    	VALUES
    	(
    		#{userNo}
    		,#{userId}
    		,#{userPwd}
    		,#{userName}
    		,#{userEmail}
    		,#{userType}
    		,#{userBirthday}
    		,#{userCountry}
    		,#{userState}
    		,#{userAddress}
    		,#{userTelNo}
    		,#{userSex}
    		,SYSDATE()
    		,#{pushToken}
    		,'N'
    		,NULL
    		,SYSDATE()
    		,0
   		)
    </insert>



	<!-- 회원 정보 업데이트 -->
    <update id="updateUserInfo" parameterType="co.smartooth.app.vo.UserVO">
    
		UPDATE ST_USER
		<trim prefix="SET" suffixOverrides=",">
			<if test="userName != null and userName != '' ">
				USER_NAME = #{userName},
	   		</if>	
			<if test="userBirthday != null and userBirthday != '' ">
				USER_BIRTHDAY = #{userBirthday},
	   		</if>	
			<if test="userCountry != null and userCountry != '' ">
				USER_COUNTRY = #{userCountry},
	   		</if>	
			<if test="userState != null and userState != '' ">
				USER_STATE = #{userState},
	   		</if>	
			<if test="userAddress != null and userAddress != '' ">
				,USER_ADDRESS = #{userAddress},
	   		</if>	
			<if test="userTelNo != null and userTelNo != '' ">
				 USER_TEL_NO = #{userTelNo},
	   		</if>	
			<if test="userSex != null and userSex != '' ">
				 USER_SEX = #{userSex},
	   		</if>	
   		</trim>
		WHERE 1=1
		AND USER_ID = #{userId}
		
    </update>



	<!-- 회원 번호 (회원 번호) 생성 전 SEQ_NO 조회 -->
    <select id="selectUserSeqNo" resultType="Integer" parameterType="String">
        SELECT ${userType}_SEQ_NO
		  FROM ST_SEQUENCE
    </select>
        
    
    
    <!-- 회원 번호 (회원 번호) 생성 전 SEQ_STR 조회 -->
    <select id="selectUserSeqStr" resultType="Integer">
        SELECT SEQ_STR
		  FROM ST_SEQUENCE
    </select>
        
    
    
    <!-- 회원 번호 (회원 번호 생성 후 SEQ_NO) 업데이트 -->
    <update id="updateUserSeqNo" parameterType="String">
		UPDATE ST_SEQUENCE
		SET ${userType}_SEQ_NO  =  #{seqNo}
    </update>



    <!-- 사용자 시퀀스 업데이트 -->
    <update id="updateUserSeqStr" parameterType="Integer">
    
		UPDATE ST_SEQUENCE
		SET SEQ_STR =  #{seqStr}
		
    </update>
    
    
    
    <!-- 사용자 정보 조회 -->
    <select id="selectUserInfo" parameterType="String" resultType="co.smartooth.app.vo.UserVO">
    
         SELECT USER_NO
         			,USER_ID
				    ,USER_NAME
				    ,USER_EMAIL
				    ,USER_TYPE
				    ,USER_BIRTHDAY
					,USER_COUNTRY
				    ,USER_STATE
				    ,USER_ADDRESS
				    ,USER_TEL_NO
				    ,USER_SEX
				    ,DATE_FORMAT(USER_RGST_DT, '%Y-%m-%d') AS USER_RGST_DT
				    ,PUSH_TOKEN 
				    ,USER_DELETE_YN
				    ,DATE_FORMAT(USER_DELETE_DT, '%Y-%m-%d') AS USER_DELETE_DT
				    ,DATE_FORMAT(LOGIN_DT, '%Y-%m-%d') AS LOGIN_DT
				    ,LOGIN_CK
		FROM ST_USER
		WHERE 1=1
		<if test="userId != null and userId != '' ">
			AND USER_ID = #{userId}
   		</if>
<!--    		<if test="userNo != null and userNo != '' "> -->
<!-- 			AND USER_NO = #{userNo} -->
<!--    		</if>  -->
   		
    </select>
    
    
    
    <!-- 비밀번호 변경(찾기) -->
    <update id="updateUserPwd" parameterType="co.smartooth.app.vo.UserVO">
    
		UPDATE ST_USER
		SET  
			USER_PWD = #{userPwd}
		WHERE 1=1
		AND USER_ID = #{userId}
		
    </update>
    
    
    
    
    
<!-- 	<delete id="deleteUser" parameterType="String"> -->
<!-- 		DELETE FROM ST_USER -->
<!-- 		WHERE 1=1 -->
<!-- 		AND USER_ID = #{userId} -->
<!-- 	</delete> -->
	
	



	<!-- 기관 목록 조회 -->
	<select id="selectSchoolList" resultType="co.smartooth.app.vo.SchoolClassInfoVO">
	
		SELECT SCHOOL_CODE
				   ,SCHOOL_NAME			
		FROM ST_SCHOOL_INFO
		WHERE 1=1
		AND IS_VISIBLE = 'Y'
		
	</select>



	<!-- 부서(반) 회원 리스트 조회 --> 
    <select id="selectDepartmentList" resultType="co.smartooth.app.vo.UserVO" parameterType="String">
    
			SELECT SU.USER_NO										AS USER_NO
					   ,SU.USER_ID										AS USER_ID
					   ,SU.USER_NAME								AS USER_NAME
					   ,STUD.SCHOOL_CODE							AS SCHOOL_CODE
					   ,STUD.CLASS_CODE							AS CLASS_CODE
					   ,SCI.CLASS_NAME								AS CLASS_NAME
			FROM ST_USER SU
			LEFT OUTER JOIN ST_TEACHER_USER_DETAIL STUD
			ON SU.USER_ID = STUD.USER_ID
			RIGHT OUTER JOIN (
											SELECT DISTINCT * FROM ST_CLASS_INFO
											WHERE 1=1
									  ) SCI
			ON STUD.CLASS_CODE = SCI.CLASS_CODE
			WHERE 1=1
		<if test="schoolCode != null and schoolCode != '' ">
			AND STUD.SCHOOL_CODE = #{schoolCode}
		</if>
			AND SU.USER_TYPE = 'TC'
			ORDER BY USER_ID ASC
			
    </select >
	
	
	
	<!-- 부서(반) ID로 해당 피측정자 목록 조회 --> 
    <select id="selectMeasuredUserList" parameterType="String" resultType="co.smartooth.app.vo.UserVO">
    
		SELECT SSUD.USER_ID															AS USER_ID
				   ,SU.USER_NAME															AS USER_NAME
				   ,DATE_FORMAT(SU.USER_BIRTHDAY, '%Y-%m-%d')		AS USER_BIRTHDAY
				   ,SU.USER_TEL_NO															AS USER_TEL_NO
			   	   ,SU.USER_SEX																AS USER_SEX
		       	   ,SSUD.SCHOOL_TYPE													AS SCHOOL_TYPE
		           ,SSUD.IS_MEASURING													AS IS_MEASURING
		FROM ST_STUDENT_USER_DETAIL SSUD
		LEFT OUTER JOIN ST_USER SU
		ON SSUD.USER_ID = SU.USER_ID
		WHERE 1=1
	<if test="userId != null and userId != '' ">
		AND SSUD.TEACHER_ID = #{userId}
	</if> 
		GROUP BY SU.USER_ID
		ORDER BY SU.USER_NAME ASC
		
    </select >
	
	
	
	<!-- 피측정자 상세 정보 등록 -->
	<insert id="insertUserDetail" parameterType="co.smartooth.app.vo.UserVO">
		
		INSERT INTO ST_STUDENT_USER_DETAIL
				(
					USER_NO
					,USER_ID
					,SCHOOL_TYPE
					,IS_MEASURING
					,TEACHER_ID
					<!-- ,PR_USER_NAME
					,PR_USER_TEL_NO -->
					,PA_USER_NAME
					,PA_USER_TEL_NO
					,AGRE_YN
				)
		VALUES
				(
					NULL
					,#{userId}
					,#{schoolType}
					,'N'
					,#{classCode}
					<!-- ,#{prUserName}
					,#{prUserTelNo} -->
					,#{paUserName}
					,#{paUserTelNo}
					<choose>
						<when test="agreYn != null and agreYn != '' ">
							,#{agreYn}	
						</when>
						<otherwise>
							,'N'
						</otherwise>
					</choose>
					
					
				)
		
	</insert>
	
	
	
	<!-- 부서(반) ID로 피측정자 목록 조회 --> 
    <select id="selectTestUserListByTc" parameterType="String" resultType="co.smartooth.app.vo.UserVO">
    
		SELECT SSUD.USER_ID								AS USER_ID
				   ,SU.USER_NAME								AS USER_NAME
		       	   ,SSUD.SCHOOL_TYPE						AS SCHOOL_TYPE
		           ,SSUD.IS_MEASURING					AS IS_MEASURING
		           ,SSUD.CAVITY_NORMAL					AS CAVITY_NORMAL
		           ,SSUD.CAVITY_CAUTION					AS CAVITY_CAUTION
		           ,SSUD.CAVITY_WARNING				AS CAVITY_WARNING
		           ,SSUD.CAVITY_DANGER					AS CAVITY_DANGER 
		FROM ST_STUDENT_USER_DETAIL SSUD
		LEFT OUTER JOIN ST_USER SU
		ON SSUD.USER_ID = SU.USER_ID
		WHERE 1=1
		AND SSUD.TEACHER_ID = #{userId}
		AND USER_NAME LIKE CONCAT('%', #{userName}, '%')
		GROUP BY SU.USER_ID
		ORDER BY SSUD.USER_ID ASC
		
    </select >
	
	
	
	<!-- 피측정자 이름 변경 -->
    <update id="updateTestUserName" parameterType="String">
    
		UPDATE ST_USER
		SET  
			   USER_NAME = #{userName}
		WHERE 1=1
		AND USER_ID = #{userId}
		
    </update>
	
	
	
	
	
	<!-- 학생 회원 목록 측정 상태 조회  -->
	<select id="selectUserMeasuringValue" parameterType="co.smartooth.app.vo.UserVO" resultType="co.smartooth.app.vo.UserVO">
	
        SELECT USER_NO
                  ,USER_ID
                  ,USER_NAME
                  ,IS_MEASURING
		FROM ST_ST_USER
		WHERE 1=1 
		AND USER_ID = #{userId}
		AND USER_DELETE_YN = 'N'	
            
    </select >
	
	
	
	<!-- 피측정자 측정 상태 업데이트 -->
    <update id="updateUserIsMeasuring" parameterType="co.smartooth.app.vo.UserVO">
		UPDATE ST_ST_USER
		SET IS_MEASURING  =  #{isMeasuring}
		WHERE USER_ID = #{userId}
    </update>
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 사용자 정보 조회 -->
    <select id="selectUserDetail" parameterType="String" resultType="co.smartooth.app.vo.UserVO">
    
		SELECT 
			USER_ID 
			,SCHOOL_TYPE
			,IS_MEASURING
			,TEACHER_ID
			<!-- ,PR_USER_NAME
			,PR_USER_TEL_NO -->
			,PA_USER_NAME
			,PA_USER_TEL_NO
			,AGRE_YN
		FROM ST_STUDENT_USER_DETAIL
		WHERE 1=1
		<if test="userId != null and userId != '' ">
			AND USER_ID = #{userId}
   		</if>
<!--    		<if test="userNo != null and userNo != '' "> -->
<!-- 			AND USER_NO = #{userNo} -->
<!--    		</if>  -->
   		
    </select>




	<!-- 피측정자 아이디 중복 체크 (ID와 기관코드)-->
    <select id="duplicateChkPaUserId" resultType="Integer" parameterType="String">

        SELECT COUNT(*) FROM ST_USER SU
		LEFT OUTER JOIN ST_STUDENT_USER_DETAIL SSUD
		ON SU.USER_ID = SSUD.USER_ID
		LEFT OUTER JOIN ST_TEACHER_USER_DETAIL STUD
		ON SSUD.TEACHER_ID = STUD.USER_ID
		WHERE 1=1
		AND SU.USER_ID = #{userId}
		AND STUD.SCHOOL_CODE = #{schoolCode}
		
    </select>
	
	
	
	
	
</mapper>